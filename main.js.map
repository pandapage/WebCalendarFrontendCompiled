{"version":3,"sources":["./src/app/sign-up-form/sign-up-form.component.ts","./src/app/sign-up-form/sign-up-form.component.html","./src/app/user-page/user-page.component.ts","./src/app/user-page/user-page.component.html","./src/app/services/calendar.service.ts","./src/environments/environment.ts","./src/app/toast-global/toast-global.component.ts","./src/app/toast-global/toast-global.component.html","./src/app/global-error-handler/error-pages/server-error-page/server-error-page.component.ts","./src/app/global-error-handler/error-pages/server-error-page/server-error-page.component.html","./src/app/services/auth-guard.service.ts","./src/app/global-error-handler/global-error-handler.ts","./src/app/global-error-handler/server-error.interceptor.ts","./src/app/services/toast-global.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/default-layout/default-layout.component.ts","./src/app/default-layout/default-layout.component.html","./src/app/app.module.ts","./src/app/global-error-handler/error-pages/not-found-page/not-found-page.component.ts","./src/app/global-error-handler/error-pages/not-found-page/not-found-page.component.html","./src/app/services/auth.service.ts","./src/app/authorize-layout/authorize-layout.component.ts","./src/app/authorize-layout/authorize-layout.component.html","./src/app/global-error-handler/error-handler.module.ts","./src/app/sign-in-form/sign-in-form.component.ts","./src/app/sign-in-form/sign-in-form.component.html","./src/app/app-routing.module.ts","./src/app/my-id/my-id.component.ts","./src/app/my-id/my-id.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-sign-up-form',\r\n  templateUrl: './sign-up-form.component.html',\r\n  styleUrls: ['./sign-up-form.component.css']\r\n})\r\nexport class SignUpFormComponent {\r\n\r\n  public form = new FormGroup({\r\n    firstName: new FormControl(null, Validators.required),\r\n    lastName: new FormControl(null, Validators.required),\r\n    email: new FormControl(null, [Validators.required, Validators.email]),\r\n    password: new FormControl(null, [Validators.required, Validators.pattern(\"^(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$\")])\r\n  });\r\n\r\n  public isEmailExsists = false;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  public submit(): void {\r\n    if (!this.form.valid) {\r\n      this.form.markAllAsTouched();\r\n      return;\r\n    }\r\n\r\n    this.form.disable();\r\n\r\n    this.authService.signUp(this.form.value)\r\n      .subscribe(\r\n        (token) => {\r\n          this.router.navigate(['']);\r\n        },\r\n        error => {\r\n          if (error.status === 409)\r\n            this.isEmailExsists = true;\r\n          else if(error.status === 400 && error.error.errors.Password)\r\n            this.form.get('password').setErrors({ pattern: true });\r\n        }\r\n      ).add(\r\n        this.form.enable()\r\n      );\r\n  }\r\n}\r\n","<div class=\"card mx-auto\">\r\n    <div class=\"card-body\">\r\n      <h2 class=\"card-title text-center\">Sign Up</h2>\r\n      <form [formGroup]=\"form\" (submit)=\"submit()\" novalidate>\r\n  \r\n        <div class=\"form-group\">\r\n          <label for=\"firstNameInput\">First name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"firstNameInput\" [formControl]=\"form.get('firstName')\"\r\n            [class.is-invalid]=\"form.get('firstName').invalid && form.get('firstName').touched\">\r\n          <small class=\"form-text text-danger\"\r\n            *ngIf=\"form.getError('required', 'firstName') && form.get('firstName').touched\">First name required</small>\r\n        </div>\r\n  \r\n        <div class=\"form-group\">\r\n          <label for=\"lastNameInput\">Last name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"lastNameInput\" [formControl]=\"form.get('lastName')\"\r\n            [class.is-invalid]=\"form.get('lastName').invalid && form.get('lastName').touched\">\r\n          <small class=\"form-text text-danger\"\r\n            *ngIf=\"form.getError('required', 'lastName') && form.get('lastName').touched\">Last name required</small>\r\n        </div>\r\n  \r\n        <div class=\"form-group\">\r\n          <label for=\"emailInput\">Email</label>\r\n          <input type=\"email\" class=\"form-control\" id=\"emailInput\" [formControl]=\"form.get('email')\"\r\n            [class.is-invalid]=\"form.get('email').invalid && form.get('email').touched\" (input)=\"isEmailExsists = false\">\r\n          <small class=\"form-text text-danger\"\r\n            *ngIf=\"form.getError('required', 'email') && form.get('email').touched\">Email required</small>\r\n          <small class=\"form-text text-danger\"\r\n            *ngIf=\"form.getError('email', 'email') && form.get('email').touched\">Invalid email</small>\r\n          <small class=\"form-text text-danger\" *ngIf=\"isEmailExsists\">Email already exists</small>\r\n        </div>\r\n  \r\n        <div class=\"form-group\">\r\n          <label for=\"passwordInput\">Password</label>\r\n          <input type=\"password\" class=\"form-control\" id=\"passwordInput\" [formControl]=\"form.get('password')\"\r\n            [class.is-invalid]=\"form.get('password').invalid && form.get('password').touched\">\r\n          <small class=\"form-text text-danger\"\r\n            *ngIf=\"form.getError('required', 'password') && form.get('password').touched\">Password required</small>\r\n          <small class=\"form-text text-danger\"\r\n            *ngIf=\"form.getError('pattern', 'password') && form.get('password').touched\">Password must contain at least one number and be 8 characters long</small>\r\n        </div>\r\n        \r\n        <div class=\"d-flex justify-content-between\">\r\n          <button type=\"submit\" class=\"btn btn-primary\" type=\"submit\" [disabled]=\"form.disabled\">Submit</button>\r\n          <button type=\"button\" class=\"btn btn-link\" [routerLink]=\"['/', 'auth', 'sign-in']\">Sign In</button>\r\n        </div>\r\n  \r\n  \r\n      </form>\r\n    </div>\r\n  </div>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { CalendarService } from 'src/app/services/calendar.service';\r\nimport { Calendar } from 'src/app/interfaces/calendar.interface';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { UserInfo } from '../interfaces/user-info.interface';\r\nimport { saveAs } from 'file-saver';\r\n\r\n@Component({\r\n  selector: 'app-user-page',\r\n  templateUrl: './user-page.component.html',\r\n  styleUrls: ['./user-page.component.css']\r\n})\r\nexport class UserPageComponent implements OnInit {\r\n  constructor(\r\n    public authService: AuthService,\r\n    private calendarService: CalendarService\r\n  ) { }\r\n  public userForm = new FormGroup({\r\n    firstName: new FormControl(null, Validators.required),\r\n    lastName: new FormControl(null,  Validators.required),\r\n    notifications: new FormControl(null)\r\n  });\r\n  firstName = this.userForm.get('firstName');\r\n  lastName = this.userForm.get('lastName');\r\n  notifications = this.userForm.get('notifications');\r\n  public email = this.authService.userEmail;\r\n\r\n  public selectedCalendars: Calendar[] = [];\r\n  public calendars: Calendar[];\r\n\r\n  public savedChanges = false;\r\n  public errors = [];\r\n  \r\n  ngOnInit(): void {\r\n    this.calendarService.get(this.authService.userId).subscribe(data => {\r\n      this.calendars = data;\r\n    });\r\n    this.resetForm();\r\n  }\r\n  \r\n  resetForm() {\r\n    this.firstName.setValue(this.authService.firstName);\r\n    this.lastName.setValue(this.authService.lastName);\r\n    this.notifications.setValue(this.authService.userNotify);\r\n  }\r\n\r\n  nothingChanged(): boolean {\r\n    let firstNameEq = this.authService.firstName === this.firstName.value;\r\n    let lastNameEq = this.authService.lastName === this.lastName.value;\r\n    let notifyEq = this.authService.userNotify === this.notifications.value;\r\n    return firstNameEq && lastNameEq && notifyEq;\r\n  }\r\n\r\n  saveChanges() {\r\n    if(this.nothingChanged())\r\n      return;\r\n    if (!this.userForm.valid) {\r\n      this.userForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    this.userForm.disable();\r\n    let userInfo: UserInfo = {\r\n      id: this.authService.userId,\r\n      firstName: this.firstName.value,\r\n      lastName: this.lastName.value,\r\n      email: this.authService.userEmail,\r\n      receiveEmailNotifications: this.notifications.value\r\n    }\r\n    this.authService.editUser(userInfo).subscribe(data => {\r\n      this.savedChanges = true;\r\n      setTimeout(()=> this.savedChanges = false, 2000);\r\n    }, err => {\r\n      if(err.status === 403)\r\n        this.errors.push(err.error.error);\r\n      else\r\n        this.errors.push(err.error.title);\r\n\r\n      setTimeout(() => this.errors = [], 2000);\r\n    })\r\n    .add(()=> {\r\n      this.resetForm();\r\n      this.userForm.enable();\r\n    });\r\n  }\r\n\r\n  exportCalendar(): void {\r\n    this.selectedCalendars\r\n      .map(calendar => calendar.id)\r\n      .forEach(id => this.calendarService.downloadCalendarIcs(id).subscribe(response => {\r\n        const uriEncodedFileName = response.headers.get('content-disposition').match(/filename\\*=UTF-8''(.*?)$/)[1];\r\n        const fileName = decodeURI(uriEncodedFileName);\r\n        const file = new File([response.body], fileName, { type: response.body.type });\r\n        saveAs(file);\r\n      }));\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"d-flex justify-content-around\">\r\n    <div ngbNav #nav=\"ngbNav\" class=\"nav-pills col-md-2\" orientation=\"vertical\">\r\n      <ng-container ngbNavItem>\r\n        <a ngbNavLink>Account settings</a>\r\n        <ng-template ngbNavContent>\r\n          <form [formGroup]=\"userForm\">\r\n            <div class=\"form-group\">\r\n              <div class=\"input-group\">\r\n                <div class=\"input-group-prepend\">\r\n                  <span class=\"input-group-text\">First name</span>\r\n                </div>\r\n                <input type=\"text\" \r\n                  class=\"form-control\" \r\n                  [formControl]=\"firstName\"\r\n                  [class.is-invalid]=\"firstName.invalid && firstName.touched\">\r\n              </div>\r\n              <small class=\"form-text text-danger\" \r\n                *ngIf=\"firstName.hasError('required') && firstName.touched\">\r\n                User first name is required\r\n              </small>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <div class=\"input-group\">\r\n                <div class=\"input-group-prepend\">\r\n                  <span class=\"input-group-text\">Last name</span>\r\n                </div>\r\n                <input type=\"text\"\r\n                  class=\"form-control\" \r\n                  [formControl]=\"lastName\" \r\n                  [class.is-invalid]=\"lastName.invalid && lastName.touched\">\r\n              </div>\r\n              <small class=\"form-text text-danger\" \r\n                *ngIf=\"lastName.hasError('required') && lastName.touched\">\r\n                User last name is required\r\n              </small>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <div class=\"input-group\">\r\n                <div class=\"input-group-prepend\">\r\n                  <span class=\"input-group-text\">Email</span>\r\n                </div>\r\n                <input type=\"text\"\r\n                  class=\"form-control\"  \r\n                  value=\"{{email}}\" disabled>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-check\">\r\n              <input type=\"checkbox\" \r\n                class=\"form-check-input\"\r\n                [formControl]=\"notifications\"\r\n                id=\"emailCheckBox\">\r\n              <label for=\"emailCheckBox\">Enable email notifications</label>\r\n            </div>\r\n          </form>\r\n          <div>\r\n            <button type=\"submit\" (click)=\"saveChanges()\" class=\"btn btn-primary\">Save changes</button>\r\n            <div *ngIf=\"savedChanges\" class=\"alert alert-success mt-2\">\r\n              Changes saved\r\n            </div>\r\n            <div *ngIf=\"errors.length > 0\" class=\"alert alert-danger mt-2\">\r\n              {{errors.toString()}}\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n      </ng-container>\r\n      <ng-container ngbNavItem>\r\n        <a ngbNavLink>Calendar export</a>\r\n        <ng-template ngbNavContent>\r\n          <ng-select\r\n            [items]=\"calendars\"\r\n            [multiple]=\"true\"\r\n            [closeOnSelect]=\"false\"\r\n            [searchable]=\"true\"\r\n            bindLabel=\"name\"\r\n            placeholder=\"Select calendar\"\r\n            [(ngModel)]=\"selectedCalendars\">\r\n          </ng-select>\r\n          <button class=\"btn btn-secondary mt-2\" [disabled]=\"selectedCalendars.length <= 0\" (click)=\"exportCalendar()\">Export</button>\r\n        </ng-template>\r\n      </ng-container>\r\n    </div>\r\n    <div [ngbNavOutlet]=\"nav\" class=\"col-md-9 mr-4\"></div>\r\n  </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Calendar } from '../interfaces/calendar.interface';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CalendarService {\r\n  private apiUrl = environment.apiUrl + \"/calendar/\";\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n\r\n  get(id: number): Observable<Calendar[]> {\r\n    return this.httpClient.get<Calendar[]>(this.apiUrl + id);\r\n  }\r\n\r\n  getCalendar(id: number): Observable<Calendar> {\r\n    return this.httpClient.get<Calendar>(this.apiUrl + `GetSingle?id=${id}`);\r\n  }\r\n\r\n  addCalendar(calendar: Calendar): Observable<Calendar> {\r\n    return this.httpClient.post<Calendar>(this.apiUrl, calendar);\r\n  }\r\n\r\n  delete(id: number): Observable<number> {\r\n    return this.httpClient.delete<number>(this.apiUrl + id);\r\n  }\r\n\r\n  editCalendar(calendar: Calendar): Observable<Calendar> {\r\n    return this.httpClient.put<Calendar>(this.apiUrl, calendar);\r\n  }\r\n\r\n  downloadCalendarIcs(calendarId: number): Observable<HttpResponse<Blob>> {\r\n    return this.httpClient.get(`${this.apiUrl}calendar-ics/${calendarId}`, {\r\n      responseType: 'blob',\r\n      observe: 'response'\r\n    });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'https://localhost:5001/api',\r\n  allowedApiDomainsAuth: ['localhost:5001']\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\nimport { ToastGlobalService } from '../services/toast-global.service';\r\n\r\n@Component({\r\n  selector: 'app-toast-global',\r\n  templateUrl: './toast-global.component.html',\r\n  styleUrls: ['./toast-global.component.css']\r\n})\r\nexport class ToastGlobalComponent {\r\n\r\n  constructor(\r\n    public toastService: ToastGlobalService\r\n  ) { }\r\n\r\n}\r\n","<div class=\"ngb-toasts\">\r\n    <ngb-toast *ngFor=\"let toast of toastService.toasts\" [header]=\"toast.title\" [delay]=\"toast.delay\" (hide)=\"toastService.delete(toast)\" class=\"{{toast.className}}\">\r\n        {{toast.content}}\r\n    </ngb-toast>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-server-error-page',\r\n  templateUrl: './server-error-page.component.html',\r\n  styleUrls: ['./server-error-page.component.css']\r\n})\r\nexport class ServerErrorPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container d-flex flex-column align-items-center\">\r\n  <h1 class=\"display-1\"><strong>500</strong></h1>\r\n  <p>Internal Server Error</p>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\nimport { ToastGlobalService } from './toast-global.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuardService implements CanActivate {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private toastService: ToastGlobalService\r\n  ) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    if (route.data.onlyAuthorized) {\r\n      if (this.authService.isAuthenticated) {\r\n        return true;\r\n      } else {\r\n        this.router.navigate(['auth']);\r\n        this.toastService.add({\r\n          delay: 5000,\r\n          title: 'Info',\r\n          content: 'Login again, please'\r\n        });\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (route.data.onlyAnonymous) {\r\n      if (!this.authService.isAuthenticated) {\r\n        return true;\r\n      } else {\r\n        this.router.navigate(['']);\r\n        this.toastService.add({\r\n          delay: 5000,\r\n          title: 'Info',\r\n          content: 'You have already signed in'\r\n        });\r\n        return false;\r\n      }\r\n    }\r\n    \r\n  }\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { ErrorHandler, Injectable } from '@angular/core';\r\nimport { ToastGlobalService } from '../services/toast-global.service';\r\n\r\n@Injectable()\r\nexport class GlobalErrorHandler implements ErrorHandler {\r\n\r\n  constructor(\r\n    private toastService: ToastGlobalService\r\n  ) { }\r\n\r\n  handleError(err: Error | HttpErrorResponse) {\r\n    let message = err.message;\r\n    if(err instanceof HttpErrorResponse)\r\n      message = err.error.error ? err.error.error : err.message;\r\n\r\n    this.toastService.add({\r\n      delay: 5000,\r\n      title: err instanceof HttpErrorResponse ? `Error ${err.status} from server` : 'Client error message',\r\n      content: message,\r\n      className: \"bg-danger text-light\"\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent, HttpRequest, HttpHandler,\r\n  HttpInterceptor, HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class ServerErrorInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private router: Router\r\n  ) { }\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        if (error.status === 404)\r\n          this.router.navigate(['/404']);\r\n        else if(error.status === 500)\r\n          this.router.navigate(['/500']);\r\n\r\n        console.error(error);\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Toast } from '../interfaces/toast.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToastGlobalService {\r\n\r\n  public toasts: Toast[] = [];\r\n  \r\n  public add(toast: Toast): void {\r\n    this.toasts.push(toast);\r\n  }\r\n\r\n  public delete(toast: Toast): void {\r\n    this.toasts = this.toasts.filter(t => t !== toast);\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'web-calendar-front';\r\n}\r\n","<router-outlet></router-outlet>\r\n<app-toast-global></app-toast-global>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-default-layout',\r\n  templateUrl: './default-layout.component.html',\r\n  styleUrls: ['./default-layout.component.css']\r\n})\r\nexport class DefaultLayoutComponent { }\r\n","<div class=\"bg-primary container-fluid full-height\">\r\n    <h1 class=\"text-center text-white display-2 py-5\">WEB - calendar</h1>\r\n    <router-outlet></router-outlet>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { environment } from '../environments/environment';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SignInFormComponent } from './sign-in-form/sign-in-form.component';\r\nimport { SignUpFormComponent } from './sign-up-form/sign-up-form.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { ACCESS_TOKEN_KEY } from './services/auth.service';\r\nimport { DefaultLayoutComponent } from './default-layout/default-layout.component';\r\nimport { AuthorizeLayoutComponent } from './authorize-layout/authorize-layout.component';\r\nimport { MyIdComponent } from './my-id/my-id.component';\r\nimport { ToastGlobalComponent } from './toast-global/toast-global.component';\r\nimport { UserPageComponent } from './user-page/user-page.component';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ErrorHandlerModule } from './global-error-handler/error-handler.module';\r\n\r\nfunction tokenGetter(): string {\r\n  return localStorage.getItem(ACCESS_TOKEN_KEY);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SignInFormComponent,\r\n    SignUpFormComponent,\r\n    DefaultLayoutComponent,\r\n    AuthorizeLayoutComponent,\r\n    MyIdComponent,\r\n    ToastGlobalComponent,\r\n    UserPageComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    NgSelectModule,\r\n    ErrorHandlerModule,\r\n    BrowserAnimationsModule,\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter,\r\n        allowedDomains: environment.allowedApiDomainsAuth\r\n      }\r\n    }),\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-not-found-page',\r\n  templateUrl: './not-found-page.component.html',\r\n  styleUrls: ['./not-found-page.component.css']\r\n})\r\nexport class NotFoundPageComponent implements OnInit {\r\n  public href: string;\r\n  constructor(private router: Router) {\r\n    this.router.events.subscribe((event: NavigationEnd) => {\r\n      if(event.url === \"/404\")\r\n        this.href = '';\r\n      else \r\n        this.href = event.url;\r\n    });\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container d-flex flex-column align-items-center\">\r\n  <h1 class=\"display-1\"><strong>404</strong></h1>\r\n  <p *ngIf=\"href\" >Page <code>{{href}}</code> not found</p>\r\n  <p *ngIf=\"!href\" >Resource not found</p>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Login } from '../interfaces/login.interface';\r\nimport { Register } from '../interfaces/register.interface';\r\nimport { Token } from '../interfaces/token.interface';\r\nimport { UserInfo } from '../interfaces/user-info.interface';\r\n\r\nexport const ACCESS_TOKEN_KEY = 'access_token';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private apiUrl = environment.apiUrl;\r\n  public userId: number;\r\n  public firstName: string;\r\n  public lastName: string;\r\n  public userEmail: string;\r\n  public userNotify: boolean;\r\n  \r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private router: Router,\r\n    private jwtHelper: JwtHelperService\r\n  ) { \r\n    if(this.userId === undefined)\r\n      this.decodeUserToken();\r\n  }\r\n\r\n  private decodeUserToken() {\r\n    try {\r\n      let token = localStorage.getItem(ACCESS_TOKEN_KEY);\r\n      let tokenInfo = this.jwtHelper.decodeToken(token);\r\n      this.userId = Number(tokenInfo.sub);\r\n      this.firstName = tokenInfo.firstName;\r\n      this.lastName = tokenInfo.lastName;\r\n      this.userEmail = tokenInfo.email;\r\n      this.userNotify = (tokenInfo.notifications === 'True');\r\n    }\r\n    catch {\r\n      this.router.navigate(['auth']);\r\n    }\r\n  }\r\n\r\n  private initStorageInfo(info) {\r\n    localStorage.setItem(ACCESS_TOKEN_KEY, info.access_token);\r\n  }\r\n\r\n  public signIn(login: Login): Observable<Token> {\r\n    return this.httpClient.post<Token>(`${this.apiUrl}/auth/sign-in`, login)\r\n    .pipe(\r\n      tap(info => {\r\n        this.initStorageInfo(info);\r\n        this.decodeUserToken();\r\n      })\r\n    );\r\n  }\r\n\r\n  public signUp(register: Register): Observable<Token> {\r\n    return this.httpClient.post<Token>(`${this.apiUrl}/auth/sign-up`, register)\r\n    .pipe(\r\n      tap(info => {\r\n        this.initStorageInfo(info);\r\n        this.decodeUserToken();\r\n      })\r\n    );\r\n  }\r\n\r\n  public editUser(userInfo: UserInfo): Observable<Token> {\r\n    return this.httpClient.put<Token>(`${this.apiUrl}/auth/edit`, userInfo)\r\n    .pipe(\r\n      tap(info => {\r\n        this.initStorageInfo(info);\r\n        this.decodeUserToken();\r\n      })\r\n    );\r\n  }\r\n\r\n  public getUsersExceptCurrent(): Observable<UserInfo[]> {\r\n    return this.httpClient.get<UserInfo[]>(`${this.apiUrl}/auth/GetAllUsers`);\r\n  }\r\n\r\n  public get isAuthenticated(): boolean {\r\n    const token = localStorage.getItem(ACCESS_TOKEN_KEY);\r\n    return token && !this.jwtHelper.isTokenExpired(token);\r\n  }\r\n\r\n  public signOut(): void {\r\n    localStorage.removeItem(ACCESS_TOKEN_KEY);\r\n    this.router.navigate(['auth']);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-authorize-layout',\r\n  templateUrl: './authorize-layout.component.html',\r\n  styleUrls: ['./authorize-layout.component.css']\r\n})\r\nexport class AuthorizeLayoutComponent {\r\n\r\n  constructor(\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  public signOut(): void {\r\n    this.authService.signOut();\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n    <div class=\"navbar-nav w-100\">\r\n        <a class=\"nav-item nav-link\" routerLink=\"/calendar\" routerLinkActive=\"active\">Calendar</a>\r\n        <a class=\"nav-item nav-link\" routerLink=\"/user\" routerLinkActive=\"active\">User page</a>\r\n        <button class=\"btn btn-warning ml-auto float-right\" (click)=\"signOut()\">SignOut</button>\r\n    </div>\r\n</nav>\r\n<div class=\"container-fluid p-5\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","import { ErrorHandler, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { GlobalErrorHandler } from './global-error-handler';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ServerErrorInterceptor } from './server-error.interceptor';\r\nimport { NotFoundPageComponent } from './error-pages/not-found-page/not-found-page.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NotFoundPageComponent\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  providers: [\r\n    { provide: ErrorHandler, useClass: GlobalErrorHandler },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ServerErrorInterceptor, multi: true }\r\n  ]\r\n})\r\nexport class ErrorHandlerModule { }\r\n","import { Component } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login-form',\r\n  templateUrl: './sign-in-form.component.html',\r\n  styleUrls: ['./sign-in-form.component.css']\r\n})\r\nexport class SignInFormComponent {\r\n\r\n  public form = new FormGroup({\r\n    email: new FormControl(null, Validators.required),\r\n    password: new FormControl(null, Validators.required)\r\n  });\r\n\r\n  public isInvalidCredentials = false;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  public submit(): void {\r\n    if (!this.form.valid) {\r\n      this.form.markAllAsTouched();\r\n      return;\r\n    }\r\n\r\n    this.form.disable();\r\n\r\n    this.authService.signIn(this.form.value)\r\n      .subscribe(\r\n        () => this.router.navigate(['']),\r\n        error => {\r\n          if (error.status === 422) {\r\n            this.isInvalidCredentials = true;\r\n            this.form.enable();\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n","<div class=\"card mx-auto\">\r\n  <div class=\"card-body\">\r\n    <h2 class=\"card-title text-center\">Sign In</h2>\r\n    <form [formGroup]=\"form\" (submit)=\"submit()\" novalidate>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"emailInput\">Email</label>\r\n        <input type=\"email\" class=\"form-control\" id=\"emailInput\" [formControl]=\"form.get('email')\"\r\n          [class.is-invalid]=\"form.get('email').invalid && form.get('email').touched\"\r\n          (input)=\"isInvalidCredentials = false\">\r\n        <small class=\"form-text text-danger\"\r\n          *ngIf=\"form.getError('required', 'email') && form.get('email').touched\">Email required</small>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"passwordInput\">Password</label>\r\n        <input type=\"password\" class=\"form-control\" id=\"passwordInput\" [formControl]=\"form.get('password')\"\r\n          [class.is-invalid]=\"form.get('password').invalid && form.get('password').touched\"\r\n          (input)=\"isInvalidCredentials = false\">\r\n        <small class=\"form-text text-danger\"\r\n          *ngIf=\"form.getError('required', 'password') && form.get('password').touched\">Password required</small>\r\n      </div>\r\n\r\n      <p class=\"text-danger\" *ngIf=\"isInvalidCredentials\">Invalid credentials</p>\r\n      \r\n      <div class=\"d-flex justify-content-between\">\r\n        <button type=\"submit\" class=\"btn btn-primary\" type=\"submit\" [disabled]=\"form.disabled\">Submit</button>\r\n        <button type=\"button\" class=\"btn btn-link\" [routerLink]=\"['/', 'auth', 'sign-up']\">Sign Up</button>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthorizeLayoutComponent } from './authorize-layout/authorize-layout.component';\r\nimport { DefaultLayoutComponent } from './default-layout/default-layout.component';\r\nimport { MyIdComponent } from './my-id/my-id.component';\r\nimport { AuthGuardService } from './services/auth-guard.service';\r\nimport { SignInFormComponent } from './sign-in-form/sign-in-form.component';\r\nimport { SignUpFormComponent } from './sign-up-form/sign-up-form.component';\r\nimport { UserPageComponent } from './user-page/user-page.component';\r\nimport { NotFoundPageComponent } from './global-error-handler/error-pages/not-found-page/not-found-page.component';\r\nimport { ServerErrorPageComponent } from './global-error-handler/error-pages/server-error-page/server-error-page.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AuthorizeLayoutComponent,\r\n    data: {\r\n      onlyAuthorized: true\r\n    },\r\n    canActivate: [\r\n      AuthGuardService\r\n    ],\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'calendar',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'id',\r\n        component: MyIdComponent\r\n      },\r\n      {\r\n        path: 'calendar',\r\n        loadChildren: () => import('./calendar/web-calendar.module').then(module => module.WebCalendarModule)\r\n      },\r\n      {\r\n        path: 'user',\r\n        component: UserPageComponent\r\n      },\r\n      {\r\n        path: '404',\r\n        component: NotFoundPageComponent\r\n      },\r\n      { \r\n        path: '500',\r\n        component: ServerErrorPageComponent\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: 'auth',\r\n    component: DefaultLayoutComponent,\r\n    data: {\r\n      onlyAnonymous: true\r\n    },\r\n    canActivate: [\r\n      AuthGuardService\r\n    ],\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'sign-in',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'sign-in',\r\n        component: SignInFormComponent\r\n      },\r\n      {\r\n        path: 'sign-up',\r\n        component: SignUpFormComponent\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: '404',\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-my-id',\r\n  templateUrl: './my-id.component.html',\r\n  styleUrls: ['./my-id.component.css']\r\n})\r\nexport class MyIdComponent implements OnInit {\r\n\r\n  public id: number;\r\n  private apiUrl = environment.apiUrl;\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.httpClient.get(`${this.apiUrl}/auth/id`)\r\n      .subscribe(id => {\r\n        this.id = +id;\r\n      })\r\n  }\r\n\r\n}\r\n","<p class=\"display-1\">\r\n    My Id: {{id}}\r\n</p>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}